version: '3.8'

volumes:
  sqlserver2019data:

networks:
  kafkanetwork:
    driver: bridge

services:

  zookeeper:
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    ports:
     - 2181:2181

  broker01:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181

  sqlserver2019:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    container_name: sqlserver2019
    ports:
      - "1433:1433"
    environment:
      - "ACCEPT_EULA=Y"
      - "SA_PASSWORD=<YourNewStrong@Passw0rd>"
      - "MSSQL_AGENT_ENABLED=True"
    volumes:
      - sqlserver2019data:/var/opt/mssql

  connect:
    image: debezium/connect:${DEBEZIUM_VERSION}
    ports:
     - 8083:8083
    links:
     - broker01
     - sqlserver2019
    environment:
     - BOOTSTRAP_SERVERS=broker01:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_source_connect_statuses

  ksqldb-server:
    image: confluentinc/ksqldb-server:${CONFLUENT_VERSION}
    ports:
      - "8088:8088"
    depends_on:
      - broker01
      - connect
    environment:
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_BOOTSTRAP_SERVERS: broker01:9092
      
  ksqldb-cli:
    image: confluentinc/ksqldb-cli:${CONFLUENT_VERSION}
    depends_on:
      - broker01
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  connect.sqlserver:
    image: ${DOCKER_REGISTRY-}connectsqlserver
    depends_on:
      - sqlserver2019
    build:
      context: .
      dockerfile: SqlServer/Dockerfile
